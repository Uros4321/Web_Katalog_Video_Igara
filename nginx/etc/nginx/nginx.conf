user  nginx;
events {}
http {
    server {
        listen 80;
        server_name your.domain.com;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name your.domain.com;
    
        ssl_certificate /etc/nginx/cert/cert.pem;
        ssl_certificate_key /etc/nginx/cert/key.pem;
        ssl_password_file /etc/nginx/cert/keypass.txt;
    
        location / {
            if ($request_method != GET ) {
                rewrite .* /_front last;
            }
            
    
            proxy_pass http://192.168.88.150:3000; # Replace with your application's address
            
            
        }
        
        location /_front {
            rewrite .* / break;
            
            auth_request /_authelia;
            auth_request_set $auth_header_user $upstream_http_remote_user;
            auth_request_set $auth_header_groups $upstream_http_remote_groups;
            proxy_set_header X-Forwarded-User $auth_header_user;
            proxy_set_header X-Forwarded-Groups $auth_header_groups;
    
            # Error handling for 401 (unauthorized)
            error_page 401 =302 https://auth.your.domain.com?rd=$scheme://$host$request_uri;
    
            proxy_pass http://192.168.88.150:3000; # Replace with your application's address
            
            
        }
        location /api{
            if ($request_method = OPTIONS){
                add_header Access-Control-Allow-Origin "$http_origin";
                add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS, HEAD';
                add_header Access-Control-Allow-Headers 'Authorization, Origin, X-Requested-With, Content-Type, Accept';
                add_header Access-Control-Allow-Credentials true;
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain charset=UTF-8';
                add_header Content-Length 0;
                return 204;
            }
            if ($request_method != GET ) {
                rewrite .* /_api last;
            }
            proxy_pass https://192.168.88.150:8443/api; # Replace with your application's address
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            
        }
        location /_api_opt{
            rewrite .* /api break;
            
            proxy_pass https://192.168.88.150:8443/api; # Replace with your application's address
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            
        }
        location /static/js{
            proxy_pass http://192.168.88.150:3000/static/js;
        }
        
        
        location /_api{
            rewrite .* /api break;
            
            auth_request /_authelia;
            auth_request_set $auth_header_user $upstream_http_remote_user;
            auth_request_set $auth_header_groups $upstream_http_remote_groups;
            proxy_set_header X-Forwarded-User $auth_header_user;
            proxy_set_header X-Forwarded-Groups $auth_header_groups;
    
            # Error handling for 401 (unauthorized)
            error_page 401 =302 https://auth.your.domain.com?rd=$scheme://$host$request_uri;

            proxy_pass https://192.168.88.150:8443/api; # Replace with your application's address
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            
            
        }
    
        location = /_authelia {
            internal;
            proxy_pass http://auth:9091; # Replace with your Authelia address
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URL $request_uri;
        }
    }
}
