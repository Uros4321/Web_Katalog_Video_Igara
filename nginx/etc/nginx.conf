http {
    server {
        listen 80;
        server_name your.domain.com;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name your.domain.com;
    
        ssl_certificate /etc/cert/cert.pem;
        ssl_certificate_key /etc/cert/key.pem;
    
        location /front {
            limit_except GET{
                auth_request /_authelia;
                auth_request_set $auth_header_user $upstream_http_remote_user;
                auth_request_set $auth_header_groups $upstream_http_remote_groups;
                proxy_set_header X-Forwarded-User $auth_header_user;
                proxy_set_header X-Forwarded-Groups $auth_header_groups;
    
                # Error handling for 401 (unauthorized)
                error_page 401 =302 https://auth.your.domain.com?rd=$scheme://$host$request_uri;
    
                proxy_pass http://192.168.88.150:3000; # Replace with your application's address
                include snippets/proxy.conf; # Include common proxy settings
            }
        }
        location /api{
            limit_except GET{
                auth_request /_authelia;
                auth_request_set $auth_header_user $upstream_http_remote_user;
                auth_request_set $auth_header_groups $upstream_http_remote_groups;
                proxy_set_header X-Forwarded-User $auth_header_user;
                proxy_set_header X-Forwarded-Groups $auth_header_groups;
    
                # Error handling for 401 (unauthorized)
                error_page 401 =302 https://auth.your.domain.com?rd=$scheme://$host$request_uri;
    
                proxy_pass http://192.168.88.150:8443/api; # Replace with your application's address
                include snippets/proxy.conf; # Include common proxy settings
            }
        }
    
        location = /_authelia {
            internal;
            proxy_pass http://authelia:9091; # Replace with your Authelia address
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URL $request_uri;
            include snippets/proxy.conf;
        }
    }
}
